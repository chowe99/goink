name: CI Pipeline

on:
  push:
    branches:
      - master  
      - develop
  pull_request:
    branches:
      - master
      - develop

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: goinkdb
          POSTGRES_USER: goinkuser
          POSTGRES_PASSWORD: goinkpass
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h localhost -p 5432; do
            echo "Waiting for PostgreSQL..."
            sleep 1
          done

      - name: Apply migrations
        run: |
          python manage.py migrate

      - name: Run tests
        run: |
          python manage.py test

  # Optional: Add a deploy job later when we have a server
  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'  # Only deploy from master branch

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Deploy to Server
      # Once server is set up we need to set the SSH_USER and SSH_HOST of it here
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            cd /path/to/your/app
            docker-compose pull
            docker-compose up -d
            docker-compose exec web python manage.py migrate
          EOF

